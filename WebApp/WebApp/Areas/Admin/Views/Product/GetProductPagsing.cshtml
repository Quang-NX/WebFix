@model PagedList.IPagedList<WebApp.Areas.Admin.Models.ViewModels.ProductViewModel>
@using PagedList.Mvc
@{
    ViewBag.Title = "GetOrderDetail";
    Layout = "~/Areas/Admin/Views/_AdminLayout.cshtml";
}
<br />
<div>
    @Html.ActionLink("Thêm mới", "Create", null, new { @class = "btn btn-primary" })
</div>
<br />

<table class="table table-bordered">
    <thead>
        <tr>
            <th>
                Tên sản phẩm
            </th>
            <th>
                Ngày hết hạn
            </th>
            <th>
                Giá
            </th>
            <th>
                Hình ảnh
            </th>
            <th>
                Thể loại
            </th>
            <th>
                Nhà cc
            </th>
            <th>
                Nhà sx
            </th>
            <th>
                Số lượng
            </th>
            <th>Chức năng</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DisplayPublicationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <img src="@item.UrlImage" style="width:100px;height:100px;">
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SupplierName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ManufacturerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.productInStock)
                </td>
                <td class="col-sm-3">
                    @Html.ActionLink("Chỉnh sửa", "Edit", new { id = item.Id }, new { @class = " btn btn-primary" })
                    @Html.ActionLink("Chi tiết", "Details", new { id = item.Id }, new { @class = " btn btn-warning" })
                    @Html.ActionLink("Xóa", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
@*<div class="pull-left">
        Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)/@Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("GetProductPagsing", new { page }),
            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
            {
                HttpMethod = "GET",
                UpdateTargetId = "productList"
            }))
    </div>*@
<div class="row">
    <div class="store-filter clearfix">
        <span class="store-qty">Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)/@Model.PageCount</span>
        @{
            var currentPage = Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber;
        }
        <ul class="store-pagination">
            <li><a href="@Url.Action("GetProductPagsing", new { page = ((currentPage - 1) <=0) ? currentPage = Model.PageSize+1 : currentPage -= 1 })"><i class="fa fa-angle-left"></i></a></li>
            @for (int vip = 1; vip <= Model.PageCount; vip++)
            {
                if (vip == (Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber))
                {
                    <li class="active"><a href="@Url.Action("GetProductPagsing", new { page = vip })">@vip</a></li>
                }
                else
                {
                    <li><a href="@Url.Action("GetProductPagsing", new { page = vip })">@vip</a></li>
                }
            }
            <li><a href="@Url.Action("GetProductPagsing", new { page = (Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)+1, Id = ViewBag.CategoryId })"><i class="fa fa-angle-right"></i></a></li>
        </ul>
    </div>
</div>